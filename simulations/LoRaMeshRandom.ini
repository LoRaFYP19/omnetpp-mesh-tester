[General]
# network
	network = LoRaMesh
	#LoRaMesh.mapPath = "map/uni"
	LoRaMesh.mapPath = "map/railway2"
	LoRaMesh.mapWidth = 3880 # width of the image of your map in meters
	LoRaMesh.mapHeight = 5430 # height of the image of your map in meters
	
	record-eventlog=true

#image-path = 
	repeat = 3
# logging
	#cmdenv-status-frequency = 10000000s
	cmdenv-output-file = cmd_env_log.txt
	cmdenv-autoflush = true
	cmdenv-express-mode = true
**.vector-recording = true
# random numbers generator
	rng-class = "cMersenneTwister"
	seed-set =  ${repetition} #${processid}
	# seed-set = ${runnumber}
# simulation timing
	simtime-resolution = -11
	sim-time-limit = 4000s #8760s
	**.loRaNodes[*].**.stopRoutingAfterDataDone = 7200s
	**.loRaEndNodes[*].**.stopRoutingAfterDataDone = 7200s
	
	warmup-period = 1h
	
	# relay nodes placement

#	**.loRaNodes[0].initialX = 1500m
#	**.loRaNodes[0].initialY = 1500m
#	**.loRaNodes[1].initialX = 500m
#	**.loRaNodes[1].initialY = 1500m
#	**.loRaNodes[2].initialX = 780m
#	**.loRaNodes[2].initialY = 723m
#	**.loRaNodes[3].initialX = 2150m
#	**.loRaNodes[3].initialY = 753m
#	**.loRaNodes[4].initialX = 2500m
#	**.loRaNodes[4].initialY = 1500m
#	**.loRaNodes[5].initialX = 2250m
#	**.loRaNodes[5].initialY = 2230m
#	**.loRaNodes[6].initialX = 750m
#	**.loRaNodes[6].initialY = 2230m
	

	# lora nodes randon placements
	**.loRaEndNodes[*].rad = 1000
	**.loRaEndNodes[*].centX = 1000
	**.loRaEndNodes[*].centY = 1000
	
	
	# Placement of endNodes as a circle	

	**.loRaEndNodes[*].deploymentType = "circle"

	# Placement of relayNodes as a grid	

	**.loRaNodes[*].deploymentType = "grid"
	**.loRaNodes[*].sepX = 500m
	**.loRaNodes[*].sepY = 500m


	
# polwer consumption features
	**.loRaNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
	**.loRaNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
	**.loRaNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")

	**.loRaEndNodes[*].LoRaNic.radio.energyConsumerType = "LoRaEnergyConsumer"
	**.loRaEndNodes[*].**.energySourceModule = "IdealEpEnergyStorage"
	**.loRaEndNodes[*].LoRaNic.radio.energyConsumer.configFile = xmldoc("energyConsumptionParameters.xml")


#general network features
	**.constraintAreaMinX = 0m
	**.constraintAreaMinY = 0m
	**.constraintAreaMinZ = 0m
	**.constraintAreaMaxX = 6000m
	**.constraintAreaMaxY = 8500m
	**.constraintAreaMaxZ = 0m
	**.delayer.config = xmldoc("cloudDelays.xml")
	**.radio.radioMediumModule = "LoRaMedium"
	**.LoRaMedium.pathLossType = "LoRaLogNormalShadowing"
	**.sigma = 0
	**.minInterferenceTime = 0s

# network features
**.numberOfGateways = 0

# number of nodes
**.numberOfNodes = 25
**.numberOfEndNodes = 20

# data packets generation
**.sendPacketsContinuously = false
**.loRaNodes[*].LoRaNodeApp.onlyNode0SendsPackets = true  #changed the parameter
**.loRaEndNodes[*].LoRaNodeApp.onlyNode0SendsPackets = true


**.numberOfDestinationsPerNode = 0 #it should be smaller than numberOfNodes, or 0 to send to all nodes
**.dataPacketDefaultSize = 20B
**.packetTTL = 0 #if 0, LoraNodeApp.cc calculates value

**.loRaNodes[*].LoRaNodeApp.timeToFirstDataPacket = 12600s
**.loRaEndNodes[*].LoRaNodeApp.timeToFirstDataPacket = 3600s
**.timeToNextDataPacketDist = "uniform"
**.timeToNextDataPacketMin = 0s


#**.timeToNextDataPacketMax = ${timeToNextDataPacketMax=0.0000s, \
#	0.1000s, 0.1500s, 0.2200s, 0.3300s, 0.4700s, 0.6800s, \
#	1.0000s, 1.5000s, 2.2000s, 3.3000s, 4.7000s, 6.8000s, \
#	10.0000s, 15.0000s, 22.0000s, 33.0000s, 47.0000s, 68.0000s, \
#	100.0000s, 150.0000s, 220.0000s, 330.0000s, 470.0000s, 680.0000s, \
# 	1000.000s, 1500.0000s, 2200.0000s}
**.timeToNextDataPacketMax = 0s
**.timeToNextDataPacketAvg = 2s

**.LoRaMedium.mediumLimitCacheType = "LoRaMediumCache"
**.LoRaMedium.rangeFilter = "communicationRange"
**.LoRaMedium.neighborCacheType = "LoRaNeighborCache"
**.LoRaMedium.neighborCache.range = 800m
**.LoRaMedium.neighborCache.refillPeriod = 3000s

# forwarded packets
**.numberOfPacketsToForward = 0 #0 for no limit
**.ownDataPriority = 0 #0: forward priority; 1: own data priority

# routing settings
**.loRaEndNodes[*].LoRaNodeApp.routingMetric = 0
**.loRaNodes[*].LoRaNodeApp.routingMetric = 1

**.routeDiscovery = true
**.routeTimeout = 5000s
**.storeBestRouteOnly = false
**.getRoutesFromDataPackets = true
**.routingPacketPriority = 0.5
**.routingPacketMaxSize = 12B
**.timeToFirstRoutingPacket = 1800s+uniform(0s, 120s)
**.timeToNextRoutingPacketDist = "uniform"
**.timeToNextRoutingPacketMin = 0s
**.timeToNextRoutingPacketMax = 120s
**.timeToNextRoutingPacketAvg = 60s

# duty cycle
**.dutyCycle = 0.01
**.enforceDutyCycle = ${enforceDutyCycle = true, false}

# LoRa settings
**.loRaNodes[*].**.initFromDisplayString = false
**.loRaNodes[*].**initialLoRaSF = 12
**.loRaNodes[*].**minLoRaSF = 7
**.loRaNodes[*].**maxLoRaSF = 12
**.loRaNodes[*].**initialLoRaBW = 125 kHz
**.loRaNodes[*].**initialLoRaCR = 1
**.loRaNodes[*].**initialLoRaTP = 20dBm
**.loRaNodes[*].**initialLoRaCAD = true
**.loRaNodes[*].**initialLoRaCADatt = 0dB

# nodes placement
**.loRaNodes[*].minX = 0m
**.loRaNodes[*].minY = 0m
**.loRaNodes[*].maxX = 4000m #4*247m
**.loRaNodes[*].maxY = 4000m #4*247m

**.loRaEndNodes[*].minX = 0m
**.loRaEndNodes[*].minY = 0m
**.loRaEndNodes[*].maxX = 4000m #4*247m
**.loRaEndNodes[*].maxY = 4000m #4*247m

**.loRaEndNodes[*].**.initFromDisplayString = false
**.loRaEndNodes[*].**initialLoRaSF = 12
**.loRaEndNodes[*].**minLoRaSF = 7
**.loRaEndNodes[*].**maxLoRaSF = 12
**.loRaEndNodes[*].**initialLoRaBW = 125 kHz
**.loRaEndNodes[*].**initialLoRaCR = 1
**.loRaEndNodes[*].**initialLoRaTP = 20dBm
**.loRaEndNodes[*].**initialLoRaCAD = true
**.loRaEndNodes[*].**initialLoRaCADatt = 0dB

### Randomness consistant

[Config No_randomness]
	rng-class = "cMersenneTwister"
	seed-set = ${repetition}

[Config LM_02_04_grid247_short]
#**.routingMetric = 2
**.loRaEndNodes[*].deploymentType = "grid"
**.loRaEndNodes[*].sepX = 247m
**.loRaEndNodes[*].sepY = 247m
#**.numberOfPacketsPerDestination = 50
**.loRaEndNodes[*].**maxLoRaSF = 7